<?xml version="1.0"?>
<doc>
    <assembly>
        <name>App.Modules.KWMODULE.AppFacade</name>
    </assembly>
    <members>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.Classic.DependencyResolutionController.#ctor(App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService,App.Modules.Core.Infrastructure.Services.IPrincipalService,App.Modules.KWMODULE.Infrastructure.Services.IExampleInfrastructureService,App.Modules.Core.Infrastructure.Data.Db.Contexts.ModuleDbContext)">
            <summary>
                Initializes a new instance of the <see cref="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.Classic.DependencyResolutionController" /> class.
            </summary>
            <param name="diagnosticsTracingService">The diagnostics tracing service.</param>
            <param name="principalService">The principal service.</param>
            <param name="exampleInfrastructureService">The example infrastructure service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.Configuration.ExampleOdataModelBuilderConfiguration">
            <summary>
                OData Configuration to describe the specified DTO,
                and the Controller
                from which to retrieve it.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.Configuration.LinkedExampleOdataModelBuilderConfiguration">
            <summary>
                Module Specific
                OData Model Definition.
                <para>
                    Describes the specified DTO,
                    and the Controller
                    from which to retrieve it.
                </para>
                <para>
                    Invoked by a Model Builder
                    during Startup.
                </para>
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.Configuration.TenantedExampleOdataModelBuilderConfiguration">
            <summary>
                Module Specific
                OData Model Definition.
                <para>
                    Describes the specified DTO,
                    and the Controller
                    from which to retrieve it.
                </para>
                <para>
                    Invoked by a Model Builder
                    during Startup.
                </para>
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController">
            <summary>
                Example of a Controller
                using this Logical Module's <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.ModuleDbContext" />,
                and returning a simple <see cref="T:App.Modules.KWMODULE.Shared.Models.Entities.Example" /> entity,
                automatically converted to an <see cref="T:App.Modules.KWMODULE.Shared.Models.Messages.ExampleDto" />
                object.
                <para>
                    Notice how the controller subclasses
                    <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3" />
                </para>
                <para>
                    Notice how this Controller uses a <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.ModuleDbContext" />
                    as opposed to using a <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext" />
                    as other example controllers demonstrate.
                </para>
                <para>
                    Notice how this method exposes public Actions, that in
                    term invoke protected InternalXXX actions. This is to
                    ensure that Controller designers associate appropriate
                    Permissions to each Action.
                </para>
                <para>
                    Notice the automatic conversion of Entites to Dtos
                    (pretty slick).
                </para>
            </summary>
            <seealso
                cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3" />
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext)">
            <summary>
                Initializes a new instance of the <see cref="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController" /> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController.Get">
            <summary>
                Gets a queryable set of items, limited to 100 items, max.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController.Get(System.Guid)">
            <summary>
                Gets a single queryable item.
            </summary>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController.Post(App.Modules.KWMODULE.Shared.Models.Messages.ExampleDto)">
            <summary>
            Creates the specified resource.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.IdCommonODataControllerBase`4.InternalPost(`2)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController.Put(App.Modules.KWMODULE.Shared.Models.Messages.ExampleDto)">
            <summary>
            Updates the specified resource.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.Base.MappedCommonODataControllerBase`3.InternalPut(`2)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.ExamplesController.Delete(System.Guid)">
            <summary>
            Deletes the entity specified by the key.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.IdCommonODataControllerBase`4.InternalDelete(`3)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController">
            <summary>
            Example of a Controller
            using this Logical Module's <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext" />,
            and returning a simple <see cref="T:App.Modules.KWMODULE.Shared.Models.Entities.LinkedExample" /> entity,
            that refers to an entity in the Core module (ie, it's linking
            two schemas), and automatically converted to an <see cref="T:App.Modules.KWMODULE.Shared.Models.Messages.LinkedExampleDto" />
            object.
            <para>
            Notice how this Controller uses a <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.ModuleDbContext" />
            as opposed to using a <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext" />
            as other example controllers demonstrate.
            </para><para>
            Notice how the controller subclasses
            <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3" /></para><para>
            Notice how this Controller uses a <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext" />
            as opposed to using a simpler <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.ModuleDbContext" />
            Notice how the <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext" /> actually is invoking
            <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.ModuleDbContext" /> and Core's ModuleDbContext *first*...
            that's how it ensures the tables exist, even though
            <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext" /> has migrations/schema building turned off
            (pretty slick...)
            </para><para>
            Notice how this method exposes public Actions, that in
            term invoke protected InternalXXX actions. This is to
            ensure that Controller designers associate appropriate
            Permissions to each Action.
            </para><para>
            Notice the automatic conversion of Entites to Dtos
            (pretty slick).
            </para>
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3" />
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext)">
            <summary>
                Initializes a new instance of the <see cref="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController" /> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController.Get">
            <summary>
                Gets a queryable set of items, limited to 100 items, max.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController.Get(System.Guid)">
            <summary>
                Gets a single queryable item.
            </summary>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController.Post(App.Modules.KWMODULE.Shared.Models.Messages.LinkedExampleDto)">
            <summary>
            Creates the specified resource.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.IdCommonODataControllerBase`4.InternalPost(`2)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController.Put(App.Modules.KWMODULE.Shared.Models.Messages.LinkedExampleDto)">
            <summary>
            Updates the specified resource.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.Base.MappedCommonODataControllerBase`3.InternalPut(`2)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.LinkedExamplesController.Delete(System.Guid)">
            <summary>
            Deletes the entity specified by the key.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.IdCommonODataControllerBase`4.InternalDelete(`3)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController">
            <summary>
                Example of a Controller
                using this Logical Module's <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.ModuleDbContext" />,
                and returning a simple <see cref="T:App.Modules.KWMODULE.Shared.Models.Entities.Example" /> entity,
                automatically converted to an <see cref="T:App.Modules.KWMODULE.Shared.Models.Messages.ExampleDto" />
                object.
                <para>
                    Notice how the controller subclasses
                    <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3" />
                </para>
                <para>
                    Notice how this Controller uses a <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.ModuleDbContext" />
                    as opposed to using a <see cref="T:App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext" />
                    as other example controllers demonstrate.
                </para>
                <para>
                    Notice how this method exposes public Actions, that in
                    term invoke protected InternalXXX actions. This is to
                    ensure that Controller designers associate appropriate
                    Permissions to each Action.
                </para>
                <para>
                    Notice the automatic conversion of Entites to Dtos
                    (pretty slick).
                </para>
                <para>
                    Notice how the Dto's do not need to carry the TenancyFK
                    outside the system. That's because they are posted back
                    and the Message they are mapped back to, if the Tenancy
                    value is not there, it will be filled in using a Save
                    interception to do that, transparently.
                </para>
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3" />
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,App.Modules.KWMODULE.Infrastructure.Data.Db.Contexts.JoinedModuleDbContext)">
            <summary>
                Initializes a new instance of the <see cref="T:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController" /> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController.Get">
            <summary>
                Gets a queryable set of items, limited to 100 items, max.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController.Get(System.Guid)">
            <summary>
                Gets a single queryable item.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController.Post(App.Modules.KWMODULE.Shared.Models.Messages.TenantedExampleDto)">
            <summary>
            Creates the specified resource.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.IdCommonODataControllerBase`4.InternalPost(`2)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController.Put(App.Modules.KWMODULE.Shared.Models.Messages.TenantedExampleDto)">
            <summary>
            Updates the specified resource.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.Base.MappedCommonODataControllerBase`3.InternalPut(`2)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Api.OData.TenantedExamplesController.Delete(System.Guid)">
            <summary>
            Deletes the entity specified by the key.
            <para>
            Override, and optionally invoke
            <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.IdCommonODataControllerBase`4.InternalDelete(`3)" /></para><para>
            If not desired,
            throw a <see cref="T:System.NotImplementedException" />.
            </para><para>
            Important:
            the method is abstract to force an override
            that is to be decorated by developers with
            a specification of the Permissions required.
            </para>
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Controllers.Configuration.Routes.ModuleRoutes">
            <summary>
                Defines this Module's
                Controller Routes (ie, Api, Views, OData).
                <para>
                Scanned for and found by <see cref="T:App.Modules.All.AppFacade.DependencyResolution.AllModulesAppFacadeServiceRegistry"/>
                </para>
                <para>
                    Invoked from app.AddMvc(routeBuilder => ...) method.
                    within App.Host's Setup.cs/Configure method.
                </para>
                <para>
                The base class already defines common routing for View Controllers,
                API Controllers and OData Controllers found within this Logical Module.
                </para>
                <para>
                The common OData convention setup via the base controller is 
                "odata/{moduleName}/{controllerName}" based on the
                implementation of <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.IModuleOdataModelBuilderConfiguration"/>
                (via <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1"/> for example)
                it found in this logical module.
                </para>
                <para>
                In general, one should probably not have to define anything,
                and just let the base class do it's thing -- but if this module
                has esoteric odata needs, this would be the method to override
                and append those routes.
                </para>
            </summary>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Configuration.Routes.ModuleRoutes.#ctor(App.Modules.Core.Infrastructure.Services.IDependencyResolutionService,App.Modules.Core.Infrastructure.Services.Statuses.ODataConfigurationStatusComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.KWMODULE.AppFacade.Controllers.Configuration.Routes.ModuleRoutes" /> class.
            </summary>
            <param name="dependencyResolutionService">The dependency resolution service.</param>
            <param name="configurationStatus">The configuration status.</param>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Controllers.Configuration.Routes.ModuleRoutes.Initialize(Microsoft.AspNetCore.Routing.IRouteBuilder)">
            <summary>
                Initialize routes specific to a Module.
                <para>
                    Invoked from app.AddMvc(routeBuilder => ...) method.
                    within App.Host's Setup.cs/Configure method.
                </para>
                <para>
                The base class already defines common routing for View Controllers,
                API Controllers and OData Controllers found within this Logical Module.
                </para>
                <para>
                The common OData convention setup via the base controller is 
                "odata/{moduleName}/{controllerName}" based on the
                implementation of <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.IModuleOdataModelBuilderConfiguration"/>
                (via <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1"/> for example)
                it found in this logical module.
                </para>
                <para>
                In general, one should probably not have to define anything,
                and just let the base class do it's thing -- but if this module
                has esoteric odata needs, this would be the method to override
                and append those routes.
                </para>
            </summary>
            <param name="routeBuilder"></param>
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.DependencyResolution.ModuleServiceRegistry">
            <summary>
                Discoverable (by Reflection) Module specific configuration
                of the DependencyLocator.
                <para>
                    Note that it is important that these common classes
                    are just called 'Module'Something and not 'ModuleXXX'Something,
                    (and just use the Namespace to distinguish between Modules)
                    so that it is easier to start new development just using Search/Replace
                    within namespaces (it's easier to find `Module1` within `.Module1`
                    than find the same thing within `Module1Something`.
                </para>
            </summary>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.DependencyResolution.ModuleServiceRegistry.InnerScan(Lamar.Scanning.Conventions.IAssemblyScanner)">
            <summary>
                Scans this Module's assemblies for
                as per specifications.
            </summary>
            <param name="assemblyScanner"></param>
        </member>
        <member name="T:App.Modules.KWMODULE.AppFacade.Initialization.StartupConfigure">
            <summary>
                TODO
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Initialization.IStartupConfigure" />
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Initialization.StartupConfigure.#ctor(Lamar.IContainer)">
            <summary>
                Initializes a new instance of the <see cref="T:App.Modules.KWMODULE.AppFacade.Initialization.StartupConfigure" /> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Initialization.StartupConfigure.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
                Invoke from the Startup.cs in the Host app.
                Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="M:App.Modules.KWMODULE.AppFacade.Initialization.StartupConfigure.AppendAServiceRegistry">
            <summary>
                Some ExtensionMethods (eg: AddDbContext)
                are expecting a ServiceRegistry (IServiceCollection)
                of some kind.
            </summary>
        </member>
    </members>
</doc>
