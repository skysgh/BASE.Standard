<?xml version="1.0"?>
<doc>
    <assembly>
        <name>App.Modules.Core.AppFacade</name>
    </assembly>
    <members>
        <member name="T:App.Extensions.IAppCoreOdataModelBuilderConfigurationExtensions">
            <summary>
            Methods that extend
            <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.IModuleOdataModelBuilderConfiguration"/>
            instances.
            </summary>
        </member>
        <member name="M:App.Extensions.IAppCoreOdataModelBuilderConfigurationExtensions.GetControllerNameByConvention(App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.IModuleOdataModelBuilderConfiguration,System.Type,System.Boolean)">
            <summary>
            Gets the controller name from the given Entity, by convention.
            <para>
            Eg: "Principal" gives "PrincipalsController"
            </para>
            </summary>
            <param name="x">The x.</param>
            <param name="dtoType">Type of the dto.</param>
            <param name="pluralise">if set to <c>true</c> [pluralise].</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.Classic.AllModulesApiControllerBase">
            <summary>
            Base class for all API Controllers
            (as opposed to OData based controllers, 
            which inherit from <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.CommonODataControllerBase"/>)
            <para>
            Decorated with <code>[Route("api/[controller]")]</code>
            </para>
            </summary>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.Classic.AllModulesApiControllerBase.#ctor(App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService,App.Modules.Core.Infrastructure.Services.IPrincipalService)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.All.AppFacade.Controllers.Api.Classic.AllModulesApiControllerBase"/> class.
            </summary>
            <param name="diagnosticsTracingService">The diagnostics tracing service.</param>
            <param name="principalService">The principal service.</param>
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.OData.CommonODataControllerBase">
            <summary>
            All OData based API Controllers, 
            whatever module,  
            *should* inherit in one way or another
            from this base controller.
            <para>
            The advantages include:
            </para>
            <para>
            * only one class that needs to be updated to .NET Core when we get there.
            </para>
            <para>
            * ensures that all classes are injected with an implementation of 
            <see cref="T:App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService"/> and <see cref="T:App.Modules.Core.Infrastructure.Services.IPrincipalService"/>
            so there is absolutely no excuse for poor diagnostics logs, or security...
            </para>
            <para>
            That said, still don't trust developers rushing to meet deadlines to take 
            care of ISO-25010/Maintainability or ISO-25010/Security, so we handle 
            Security and Logging as Global Filters anyway).
            </para>
            <para>
            Note that one has to decorate all classes
            with 
            <c>App.Modules.Core.Shared.Constants.All.Apis.BaseODataPath + "[controller]"</c>
            or 
            <c>App.Modules.Core.Shared.Constants.All.Apis.BaseODataPath + "ModuleName/" + "[controller]"</c>
            </para>
            </summary>
            <seealso cref="T:Microsoft.AspNet.OData.ODataController" />
        </member>
        <member name="F:App.Modules.All.AppFacade.Controllers.Api.OData.CommonODataControllerBase._diagnosticsTracingService">
            <summary>
            The diagnostics tracing service.
            </summary>
        </member>
        <member name="F:App.Modules.All.AppFacade.Controllers.Api.OData.CommonODataControllerBase._principalService">
            <summary>
            The principal service to provide the thread's current principal.
            </summary>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.CommonODataControllerBase.#ctor(App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService,App.Modules.Core.Infrastructure.Services.IPrincipalService)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.CommonODataControllerBase"/> class.
            </summary>
            <param name="diagnosticsTracingService">The diagnostics tracing service.</param>
            <param name="principalService">The principal service.</param>
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.OData.ComparableIdCommonODataControllerBase`4">
            <summary>
            The base class for all OData Controllers
            that deal in DTOs mapper from Entities.
            <para>
            The DTOs (and Entities) have an Id property
            whose type could be a Guid, or Enum, or int. 
            </para>
            <para>
            Advantages are that the class handles the mapping automatically.
            </para>
            <para>
            The advantages include:
            * has a built in concept of Logical Entity and exposed Dto Message equivalent
            of that Entity, as well as the logic to leverage AutoMapper to pass the linq
            through the layers. ie, the Magic of ProjectTo.
            * only one base class that needs to be updated to .NET Core when we get there.
            * ensures that all classes are injected with an implementation of
            <see cref="T:App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService" /> and <see cref="T:App.Modules.Core.Infrastructure.Services.IPrincipalService" />
            so there is absolutely no excuse for poor diagnostics logs, or security...
            </para>
            <para>
            that said, still don't trust developers rushing to meet deadlines to take
            care of ISO-25010/Maintainability or ISO-25010/Security, so we handle
            Security and Logging as GLobal Filters anyway).
            </para>
            </summary>
            <typeparam name="TDbContext">The type of the database context.</typeparam>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TDto">The type of the dto.</typeparam>
            <typeparam name="TId">The type of the identifier.</typeparam>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3" />
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.ComparableIdCommonODataControllerBase`4.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Initializes a new instance of the
            <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.ComparableIdCommonODataControllerBase`4" /> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.ComparableIdCommonODataControllerBase`4.InternalPost(`2)">
            <summary>
            Internal method that can be invoked by a subclass,
            and that already handles the mapping from Dto to Entity.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.ComparableIdCommonODataControllerBase`4.InternalGet(`3)">
            <summary>
            Internal method that can be invoked by a subclass,
            and that already handles the mapping from Entity to Dto.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.ComparableIdCommonODataControllerBase`4.InternalDelete(System.Guid)">
            <summary>
            Internal method that can be invoked by a subclass.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.IModuleOdataModelBuilderConfiguration">
            <summary>
            Contract for all OData ModelBuilder Configuration
            objects.
            <para>
            Objects that derive from this interface
            (in most cases by being a subclass of
            <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1"/>)
            are found by reflection at startup.
            </para>
            </summary>
            <seealso cref="T:Microsoft.AspNet.OData.Builder.IModelConfiguration" />
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1.Define(Microsoft.AspNet.OData.Builder.ODataModelBuilder)">
            <summary>
            Defines the EntityTypeConfiguration for the given Type.
            <para>
            Note that the key is set to the property called Id.
            </para>
            </summary>
            <param name="builder">The builder.</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1">
            <summary>
            Module Specific
            OData Model Definition.
            Invoked by a Model Builder.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1.ControllerName">
            <summary>
            Gets or sets the name of the Controller
            associated to the T.
            <para>
            For example, given "Principal", the Controller
            name will be "PrincipalsController"
            </para>
            </summary>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1" /> class.
            </summary>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1"/> class.
            </summary>
            <param name="controllerName">Name of the controller.</param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1.Apply(Microsoft.AspNet.OData.Builder.ODataModelBuilder,Microsoft.AspNetCore.Mvc.ApiVersion)">
            <summary>
            override this when you have more versions of an object 
            </summary>
            <param name="builder"></param>
            <param name="apiVersion"></param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1.Define(Microsoft.AspNet.OData.Builder.ODataModelBuilder)">
            <summary>
            Defines the entity set for T.
            <para>
            Note that the Key is not set (it is up to a subclass to define which
            property of the DTO is the Key).
            </para>
            </summary>
            <param name="builder">The builder.</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3">
            <summary>
            The base class for Tenanted (ie, specific to a certain client) Controllers
            whose DTOs expose
            the internal Guid Id of the logical entities.
            <para>
            In the past exposing the storage Id was considering
            exposing an unnecessary amount of information, that could be
            maybe leveraged for an attack.
            As a security concern that's basically false concern. On the other hand,
            it does cause a contractual dependency to the Guid Id, in between systems,
            when a Code would be more appropriate.
            </para><para>
            The advantages include:
            * has a built in concept of Logical Entity and exposed Dto Message equivalent
            of that Entity, as well as the logic to leverage AutoMapper to pass the linq
            through the layers. ie, the Magic of ProjectTo.
            * only one base class that needs to be updated to .NET Core when we get there.
            * ensures that all classes are injected with an implementation of
            <see cref="T:App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService" /> and <see cref="T:App.Modules.Core.Infrastructure.Services.IPrincipalService" />
            so there is absolutely no excuse for poor diagnostics logs, or security...
            (that said, still don't trust developers rushing to meet deadlines to take
            care of ISO-25010/Maintainability or ISO-25010/Security, so we handle
            Security and Logging as GLobal Filters anyway).
            </para>
            </summary>
            <typeparam name="TDbContext">The type of the database context.</typeparam>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TDto">The type of the dto.</typeparam>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.ComparableIdCommonODataControllerBase`4" />
            <seealso cref="T:System.Guid" />
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Initializes a new instance of the
            <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3" /> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3.InternalPost(`2)">
            <summary>
            Internal method that can be invoked by a subclass,
            and that already handles the mapping from Dto to Entity.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3.InternalGet(System.Guid)">
            <summary>
            Internal method that can be invoked by a subclass,
            and that already handles the mapping from Entity to Dto.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.GuidIdCommonODataControllerBase`3.InternalDelete(System.Guid)">
            <summary>
            Internal method that can be invoked by a subclass.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3">
            <summary>
            Just about every controller, whatever module,  
            *should* inherit in one way or another
            from this base controller.
            <para>
            The advantages include:
            * has a built in concept of Logical Entity and exposed Dto Message equivalent 
              of that Entity, as well as the logic to leverage AutoMapper to pass the linq
              through the layers. ie, the Magic of ProjectTo.
            * only one base class that needs to be updated to .NET Core when we get there.
            * ensures that all classes are injected with an implementation of 
            <see cref="T:App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService"/> and <see cref="T:App.Modules.Core.Infrastructure.Services.IPrincipalService"/>
            so there is absolutely no excuse for poor diagnostics logs, or security...
            (that said, still don't trust developers rushing to meet deadlines to take 
            care of ISO-25010/Maintainability or ISO-25010/Security, so we handle 
            Security and Logging as GLobal Filters anyway).
            </para>
            </summary>
            <seealso cref="T:Microsoft.AspNet.OData.ODataController" />
        </member>
        <member name="F:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3._tenantService">
            <summary>
            The tenant service
            </summary>
        </member>
        <member name="F:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3._dbContext">
            <summary>
            The database context used to retrieve/save objects.
            </summary>
        </member>
        <member name="F:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3._objectMappingService">
            <summary>
            The object mapping service
            </summary>
        </member>
        <member name="F:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3._secureApiMessageAttribute">
            <summary>
            The secure API message attribute service
            used to secure messages before they go out.
            </summary>
        </member>
        <member name="P:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.ControllerCommonServicesService">
            <summary>
            Gets the controller common services service.
            </summary>
            <value>
            The controller common services service.
            </value>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3"/> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.InternalGetDbSet">
            <summary>
            Internal method that can be invoked by a subclass.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            <para>
            Invoked by <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.InternalActiveRecords"/>
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.InternalPut(`2)">
            <summary>
            Internal method that can be invoked by a subclass.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.InternalGet(System.Linq.Expressions.Expression{System.Func{`2,System.Object}}[])">
            <summary>
            Internal method that can be invoked by a subclass.
            <para>
            The method is protected and internal to ensure the
            subclass' method is created deliberately, to ensure
            that security is considered.
            </para>
            </summary>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.InternalActiveRecords">
            <summary>
            Gets only Active records.
            <para>
            Invokes <see cref="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.InternalGetDbSet"/>
            </para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.All.AppFacade.Controllers.Api.OData.MappedCommonODataControllerBase`3.GetTenantFK">
            <summary>
            Gets the current Tenant Id (in order to limit
            records retrieved using Get).
            </summary>
            <returns></returns>
        </member>
        <member name="T:App.Modules.All.AppFacade.DependencyResolution.AllModulesAppFacadeServiceRegistry">
            <summary>
            A <see cref="T:Lamar.ServiceRegistry"/>
            that scans all Assemblies in all Logical Modules.
            </summary>
            <seealso cref="T:Lamar.ServiceRegistry" />
        </member>
        <member name="M:App.Modules.All.AppFacade.DependencyResolution.AllModulesAppFacadeServiceRegistry.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:App.Modules.All.AppFacade.DependencyResolution.AllModulesAppFacadeServiceRegistry"/> class.
            </summary>
        </member>
        <member name="T:App.Modules.All.AppFacade.DependencyResolution.ModuleServiceRegistryBase">
            <summary>
            The base class for each Module's (Core, Module1, Module2, etc.) ServiceRegistry.
            <para>
            To avoid undesired side effects, It's important that each Module
            inherits from this Module as it is set up to only search for dependencies
            within this Module's group of assemblies (it's filtering on the Assembly name)
            </para>
            </summary>
        </member>
        <member name="M:App.Modules.All.AppFacade.DependencyResolution.ModuleServiceRegistryBase.InnerScan(Lamar.Scanning.Conventions.IAssemblyScanner)">
            <summary>
            Scans this Module's assemblies for
            as per specifications.
            </summary>
        </member>
        <member name="T:App.Modules.All.AppFacade.Initialization.Views.IAllModulesViewArtifactRegistration">
            <summary>
            TODO
            </summary>
            <seealso cref="T:App.Modules.All.Shared.Initialization.IHasInitialize`1" />
        </member>
        <member name="T:App.Modules.All.AppFacade.Services.IAppFacadeService">
            <summary>
            Optional contract that all AppFacade Services
            should inherit from.
            <para>
            The contract does not add or enforce any functionality
            bar specifying a specific IoC Lifecycle (making it a Singleton
            by inheriting from
            <see cref="T:App.Modules.All.Shared.DependencyResolution.Lifecycles.IHasSingletonLifecycle"/>)
            and allowing for filtering per Core/Module.
            </para>
            </summary>
        </member>
        <member name="T:App.Modules.Core.AppFacade.ActionFilters.SamepleActionFilterAttribute">
            <summary>
            An example of a Sample filter that can be applied to all Requests.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.ActionFilters.SamepleActionFilterAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.ActionFilters.SamepleActionFilterAttribute"/> class.
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.ActionFilters.SamepleActionFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            </summary>
            <param name="context"></param>
            <inheritdoc />
        </member>
        <member name="M:App.Modules.Core.AppFacade.ActionFilters.SamepleActionFilterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <inheritdoc />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.Classic.DbController">
            <summary>
            TODO
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.DbController.#ctor(App.Modules.Core.Infrastructure.Services.IDependencyResolutionService)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.Classic.DbController"/> class.
            </summary>
            <param name="dependencyResolutionService">The dependency resolution service.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.DbController.Seed(System.String)">
            <summary>
            TODO: Seeds the specified module.
            </summary>
            <param name="module">The module.</param>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.Classic.Diagnostics.StatusController">
            <summary>
            TODO
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.Classic.AllModulesApiControllerBase" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Diagnostics.StatusController.#ctor(App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService,App.Modules.Core.Infrastructure.Services.IPrincipalService,App.Modules.Core.Infrastructure.Services.IDependencyResolutionService,App.Modules.Core.Infrastructure.Data.Db.Contexts.ModuleDbContext)">
            <summary>
            Initializes a new instance of the
            <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.Classic.Diagnostics.StatusController"/> class.
            </summary>
            <param name="diagnosticsTracingService">The diagnostics tracing service.</param>
            <param name="principalService">The principal service.</param>
            <param name="dependencyResolutionService">The dependency resolution service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Diagnostics.StatusController.Get(System.String)">
            <summary>
            TODO: Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Diagnostics.StatusController.CheckRoutes">
            <summary>
            TODO: Checks the routes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller">
            <summary>
            
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.Classic.AllModulesApiControllerBase" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller.#ctor(App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService,App.Modules.Core.Infrastructure.Services.IPrincipalService)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller"/> class.
            </summary>
            <param name="diagnosticsTracingService">The diagnostics tracing service.</param>
            <param name="principalService">The principal service.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller.List">
            <summary>
            TODO: Lists this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller.Get(System.Int32)">
            <summary>
            TODO: Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller.Post(System.String)">
            <summary>
            TODO
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller.Put(System.Int32,System.String)">
            <summary>
            TODO: Puts the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.Classic.Values2Controller.Delete(System.Int32)">
            <summary>
            TODO: Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ApplicationDescriptionOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.ApplicationDescriptionDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ApplicationDescriptionOdataModelBuilderConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ApplicationDescriptionOdataModelBuilderConfiguration"/> class.
            </summary>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ConfigurationStepRecordOdataModelBuilderConfiguration">
            <summary>
            Configuration object to describe the DTO and the Controller from which to retrieve it.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ConfigurationStepRecordOdataModelBuilderConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ConfigurationStepRecordOdataModelBuilderConfiguration"/> class.
            </summary>
            <internal>
            Remember to make these constructors public or reflection for 
            <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.IModuleOdataModelBuilderConfiguration"/> won't find them.
            </internal>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.DataClassificationOdataModelBuilderConfiguration">
            <summary>
            Configuration object to describe the DTO and the Controller from which to retrieve it.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.DataClassificationOdataModelBuilderConfiguration.Define(Microsoft.AspNet.OData.Builder.ODataModelBuilder)">
            <summary>
            Defines the entity set for T.
            <para>
            Note that the Key is not set (it is up to a subclass to define which
            property of the DTO is the Key).
            </para>
            </summary>
            <param name="builder">The builder.</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.EmailODataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.EmailDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.EmailODataModelBuilderConfiguration.Define(Microsoft.AspNet.OData.Builder.ODataModelBuilder)">
            <summary>
            Defines the entity set for T.
            <para>
            Note that the key is set to the property called Id.
            </para>
            </summary>
            <param name="builder">The builder.</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ExceptionRecordOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.ExceptionRecordDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ExceptionRecordOdataModelBuilderConfiguration.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.ExceptionRecordOdataModelBuilderConfiguration"/> class.
            </summary>
            <internal>
            Remember to make these constructors public or reflection for 
            <see cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.IModuleOdataModelBuilderConfiguration"/> won't find them.
            </internal>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.GeoInformationODataMOdelBuilderConfighuration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.GeoInformationDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.GeoInformationODataMOdelBuilderConfighuration.Define(Microsoft.AspNet.OData.Builder.ODataModelBuilder)">
            <summary>
            Defines the entity set for T,
            and sets the Id.
            </summary>
            <param name="builder">The builder.</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.MediaMetadataOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.MediaMetadataDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.NotificationOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.NotificationDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.PrincipalCategoryOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.PrincipalCategoryDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.PrincipalClaimOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.PrincipalClaimDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.PrincipalOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.PrincipalDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.PrincipalPropertyOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.PrincipalPropertyDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.PrincipalTagOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.PrincipalTagDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.RoleOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.RoleDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.SessionOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.SessionDto"/>, and relate it to a Controller.
            <para>
            </para>
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.SessionOperationOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.SessionOperationDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.TenantClaimOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.TenantClaimDto"/>, and relate it to a Controller.
            </summary>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.TenantOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.TenantDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.TenantPropertyOdataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.TenantPropertyDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.Configuration.UserProfileODataModelBuilderConfiguration">
            <summary>
            An OData Configuration object to define the shape of an
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.UserProfileDto"/>, and relate it to a Controller.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.Configuration.ModuleGuidIdODataModelBuilderConfigurationBase`1" />
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.DataClassificationsController">
            <summary>
            OData Queryable REST Controller for
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.ExceptionRecordDto"/> messages 
            for Application Support Specialists to 
            query what Exceptions have happened of late.
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DataClassificationsController.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,App.Modules.Core.Infrastructure.Data.Db.Contexts.ModuleDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.OData.DataClassificationsController"/> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DataClassificationsController.Get">
            <summary>
            Gets a single DTO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DataClassificationsController.Get(App.Modules.Core.Shared.Models.Entities.NZDataClassification)">
            <summary>
            Gets the specified entity
            via it's Key.
            <para>
            Example request:
            <code>
            https://localhost:5001/odata/core/dataclassifications(App.Modules.Models.Entities.NZDataClassification'Unclassified')
            </code>
            </para>
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DataClassificationsController.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DataClassificationsController.Fuzz(System.String)">
            <summary>
            Fuzzs the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.DiagnosticsTracesController">
            <summary>
            Controller to return DiagnosticsTrace messages
            to authorised users.
            </summary>
            <seealso cref="T:App.Modules.All.AppFacade.Controllers.Api.OData.CommonODataControllerBase" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DiagnosticsTracesController.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,App.Modules.Core.Infrastructure.Data.Db.Contexts.ModuleDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.OData.DiagnosticsTracesController" /> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DiagnosticsTracesController.Get">
            <summary>
            Gets a queryable set of
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.DiagnosticsTraceRecordDto"/>
            objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.DiagnosticsTracesController.Put(System.String,App.Modules.Core.Shared.Models.Entities.TraceLevel)">
            <summary>
            Record a Diagnostics Message, if authorised to do so.
            </summary>
            <param name="text"></param>
            <param name="traceLevel"></param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Controllers.Api.OData.ExceptionRecordsController">
            <summary>
            OData Queryable REST Controller for
            <see cref="T:App.Modules.Core.Shared.Models.Messages.API.V0100.ExceptionRecordDto"/> messages 
            for Application Support Specialists to 
            query what Exceptions have happened of late.
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.ExceptionRecordsController.#ctor(App.Modules.Core.AppFacade.Services.IControllerCommonServicesService,App.Modules.Core.Infrastructure.Data.Db.Contexts.ModuleDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Controllers.Api.OData.ExceptionRecordsController"/> class.
            </summary>
            <param name="controllerCommonServicesService">The controller common services service.</param>
            <param name="dbContext">The database context.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.ExceptionRecordsController.Get">
            <summary>
            Invokes InternalGet
            to return a single Dto.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Controllers.Api.OData.ExceptionRecordsController.Get(System.Guid)">
            <summary>
            Invokes InternalGet
            to return a single dto object.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:App.Modules.Core.AppFacade.DependencyResolution.ModuleServiceRegistry">
            <summary>
            Discoverable (by Reflection) Module specific configuration
            of the DependencyLocator.
            <para>
            Note that it is important that these common classes
            are just called 'Module'Something and not 'ModuleXXX'Something,
            (and just use the Namespace to distinguish between Modules)
            so that it is easier to start new development just using Search/Replace
            within namespaces (it's easier to find `Module1` within `.Module1`
            than find the same thing within `Module1Something`.
            </para>
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.DependencyResolution.ModuleServiceRegistry.InnerScan(Lamar.Scanning.Conventions.IAssemblyScanner)">
            <summary>
            Scans this Module's assemblies for
            as per specifications.
            </summary>
            <param name="assemblyScanner"></param>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Initialization.Startup.IModuleRoutes">
            <summary>
            Contract for defining a single Module's
            Routes.
            <para>
            Invoked from Host Startup.cs
            </para> 
            </summary>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Initialization.Startup.IStartupConfigure">
            <summary>
            Contract for a class that can be invoked from 
            Startup.cs in the host file.
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.IStartupConfigure.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Invoke from the Startup.cs in the Host app.
            Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutes">
            <summary>
            This Module's specific routes.
            <para>
            Invoked from Startup/Configure method,
            within .AddMvc...
            </para>
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutes.#ctor(App.Modules.Core.Infrastructure.Services.IDependencyResolutionService,App.Modules.Core.Infrastructure.Services.IConfigurationStepService)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutes"/> class.
            </summary>
            <param name="dependencyResolutionService">The dependency resolution service.</param>
            <param name="configurationStepService">The configuration step service.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutes.Initialize(Microsoft.AspNetCore.Routing.IRouteBuilder)">
            <summary>
            Initialize routes specific to a Module.
            <para>
            Invoked from app.AddMvc(routeBuilder =&gt; ...) method.
            within App.Host's Setup/Configure method.
            </para><para>
            Use as required to register routes specific to a single Module.
            </para><para>
            Base class invokes <see cref="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.CreateODataRoutes(Microsoft.AspNetCore.Routing.IRouteBuilder)" /></para>
            </summary>
            <param name="routeBuilder">The route builder.</param>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase">
            <summary>
            Base class to simplify
            the registration of
            custom routes
            individual logical Modules
            may require.
            </summary>
            <seealso cref="T:App.Modules.Core.AppFacade.Initialization.Startup.IModuleRoutes" />
        </member>
        <member name="F:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase._routePrefix">
            <summary>
            The route prefix.
            Must be unique.
            Will  be the name of the Module.
            </summary>
        </member>
        <member name="F:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase._dependencyResolutionService">
            <summary>
            The dependency resolution service
            </summary>
        </member>
        <member name="F:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase._configurationStepService">
            <summary>
            The configuration step service
            </summary>
        </member>
        <member name="F:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.ModuleName">
            <summary>
            The Name of this Module ("Core", etc.)
            </summary>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.#ctor(App.Modules.Core.Infrastructure.Services.IDependencyResolutionService,App.Modules.Core.Infrastructure.Services.IConfigurationStepService)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase"/> class.
            </summary>
            <param name="dependencyResolutionService">The dependency resolution service.</param>
            <param name="configurationStepService">The configuration step service.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.Initialize(Microsoft.AspNetCore.Routing.IRouteBuilder)">
            <summary>
            Initializes the specified MVC route builder.
            </summary>
            <param name="routeBuilder">The route builder.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.CreateODataRoutes(Microsoft.AspNetCore.Routing.IRouteBuilder)">
            <summary>
            
            <para>
            Invoked from Startup/Configure method,
            within .AddMvc...
            </para>
            </summary>
            <param name="routeBuilder"></param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.BuildODataModelUsingReflectionAcrossAllAssembliesWithinLogicalModule">
            <summary>
            Builds the o data model using reflection across all assemblies within this logical module.
            </summary>
            <returns></returns>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.RegisterRoutesToODataController(Microsoft.AspNetCore.Routing.IRouteBuilder,Microsoft.AspNet.OData.Builder.ODataConventionModelBuilder)">
            <summary>
            Called after <see cref="M:App.Modules.Core.AppFacade.Initialization.Startup.ModuleRoutesBase.BuildODataModelUsingReflectionAcrossAllAssembliesWithinLogicalModule"/>
            </summary>
            <param name="routeBuilder"></param>
            <param name="odataModelBuilder"></param>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Initialization.Startup.StartupConfigure">
            <summary>
            
            </summary>
            <seealso cref="T:App.Modules.Core.AppFacade.Initialization.Startup.IStartupConfigure" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.StartupConfigure.#ctor(Lamar.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Initialization.Startup.StartupConfigure"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.StartupConfigure.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Invoke from the Startup.cs in the Host app.
            Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="M:App.Modules.Core.AppFacade.Initialization.Startup.StartupConfigure.AppendAServiceRegistry">
            <summary>
            Some ExtensionMethods (eg: AddDbContext)
            are expecting a ServiceRegistry (IServiceCollection)
            of some kind. 
            </summary>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Services.IControllerCommonServicesService">
            <summary>
            Service to inject into Controllers
            (OData or traditional Api)
            that return persisted records of 
            some kind.
            <para>
            The purpose of the Controller is only 
            to make the injection of services into
            Controllers a bit less repetitive -- 
            and the Constructors
            easier to update if the number/type of
            common services were changed in the future.
            </para>
            </summary>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.IControllerCommonServicesService.DiagnosticsTracingService">
            <summary>
            Gets the diagnostics tracing service.
            </summary>
            <value>
            The diagnostics tracing service.
            </value>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.IControllerCommonServicesService.PrincipalService">
            <summary>
            Gets the principal service.
            </summary>
            <value>
            The principal service.
            </value>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.IControllerCommonServicesService.TenantService">
            <summary>
            Gets the tenant service.
            </summary>
            <value>
            The tenant service.
            </value>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.IControllerCommonServicesService.ObjectMappingService">
            <summary>
            Gets the object mapping service.
            </summary>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.IControllerCommonServicesService.SecureApiMessageAttribute">
            <summary>
            Gets the secure API message service.
            </summary>
        </member>
        <member name="T:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService">
            <summary>
            A collection of commonly used services.
            <para>
            Facilitates and simplifies the creation of
            Controllers.
            </para>
            </summary>
            <seealso cref="T:App.Modules.Core.AppFacade.Services.IControllerCommonServicesService" />
        </member>
        <member name="M:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService.#ctor(App.Modules.Core.Infrastructure.Services.IDiagnosticsTracingService,App.Modules.Core.Infrastructure.Services.IPrincipalService,App.Modules.Core.Infrastructure.Services.ITenantService,App.Modules.Core.Infrastructure.Services.IObjectMappingService,App.Modules.Core.Infrastructure.Services.ISecureAPIMessageAttributeService)">
            <summary>
            Initializes a new instance of the <see cref="T:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService"/> class.
            </summary>
            <param name="diagnosticsTracingService">The diagnostics tracing service.</param>
            <param name="principalService">The principal service.</param>
            <param name="tenantService">The tenant service.</param>
            <param name="objectMappingService">The object mapping service.</param>
            <param name="secureApiMessageAttribute">The secure API message attribute.</param>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService.DiagnosticsTracingService">
            <summary>
            Gets the diagnostics tracing service.
            </summary>
            <value>
            The diagnostics tracing service.
            </value>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService.PrincipalService">
            <summary>
            Gets the principal service.
            </summary>
            <value>
            The principal service.
            </value>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService.TenantService">
            <summary>
            Gets the tenant service.
            </summary>
            <value>
            The tenant service.
            </value>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService.ObjectMappingService">
            <summary>
            Gets the object mapping service.
            </summary>
            <value>
            The object mapping service.
            </value>
        </member>
        <member name="P:App.Modules.Core.AppFacade.Services.Implementations.ControllerCommonServicesService.SecureApiMessageAttribute">
            <summary>
            Gets the secure API message attribute.
            </summary>
            <value>
            The secure API message attribute.
            </value>
        </member>
    </members>
</doc>
