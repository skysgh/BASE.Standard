// Copyright MachineBrains, Inc. 2019

using App.Modules.Core.Infrastructure.ServiceAgents.Implementations.Scanii;
using App.Modules.Core.Shared.Configuration.Settings;

namespace App.Modules.Core.Infrastructure.Services.Configuration.Implementations
{
    /// <summary>
    ///     Configuration object to be injected into the
    ///     implementation of <see cref="IMediaMalwareDetectionService" />
    ///     <para>
    ///         Inherits from <see cref="ICoreServiceConfigurationObject" />
    ///         whic inherits from <see cref="IHasSingletonLifecycle" />
    ///         to hint at startup that the Configuration object should be
    ///         IoC registered for the duration of the application (not the thread).
    ///         as some configuration hits remote services (eg: Azure KeyVault)
    ///         which would be rather slow.
    ///     </para>
    /// </summary>
    /// <seealso cref="App.Modules.Core.Infrastructure.Services.Configuration.ICoreServiceConfigurationObject" />
    public class MediaMalwareDetectionServiceConfiguration : ICoreServiceConfigurationObject
    {
        public readonly ScaniiClient ScaniiClient;

        public MediaMalwareDetectionServiceConfiguration(IDiagnosticsTracingService diagnosticsTracingService,
            IAzureKeyVaultService keyVaultService)
        {
            var configuration = keyVaultService.GetObject<ScaniiHostConfiguration>();

            Key = configuration.Key;
            Secret = configuration.Secret;
            BaseUri = configuration.BaseUri;


            ScaniiClient = new ScaniiClient(diagnosticsTracingService,
                configuration.Key,
                configuration.Secret,
                configuration.BaseUri);
        }

        public string Key { get; }
        public string Secret { get; }
        public string BaseUri { get; }
    }
}